{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.module.css","components/Container/Container.module.css","components/FriendList/FriendList.module.css","components/Container/Container.js","components/Profile/Profile.js","utils/randomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js"],"names":["module","exports","Container","title","children","className","s","section","container","Profile","avatar","name","tag","location","stats","followers","views","likes","card","imgProfile","src","alt","list","item","stat","statValue","randomColor","Math","random","toString","substring","toUpperCase","Statistics","map","id","label","percentage","style","backgroundColor","value","FriendListItem","friend","isOnline","key","online","offline","itemImage","width","FriendList","friends","Fragment","TransactionHistory","items","table","thead","heading","type","amount","currency","tableRow","tableData","App","user","statisticalData","transactions","root","document","querySelector","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.31961fbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Profile_card___XvPg\",\"imgProfile\":\"Profile_imgProfile__2btSU\",\"name\":\"Profile_name__3f9Cr\",\"tag\":\"Profile_tag__1-Nyl\",\"location\":\"Profile_location__NpVFC\",\"list\":\"Profile_list__fMqvW\",\"item\":\"Profile_item__31YwP\",\"stat\":\"Profile_stat__8xZ1n\",\"statValue\":\"Profile_statValue__2QgOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__3LKtW\",\"thead\":\"TransactionHistory_thead__27_hZ\",\"heading\":\"TransactionHistory_heading__2T1Uj\",\"tableRow\":\"TransactionHistory_tableRow__2l3ws\",\"tableData\":\"TransactionHistory_tableData__3gEcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__2adLR\",\"title\":\"Statistics_title__1HVGA\",\"list\":\"Statistics_list__3fhhU\",\"item\":\"Statistics_item__2EP_1\",\"label\":\"Statistics_label__5H0xQ\",\"value\":\"Statistics_value__ua_MB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__10qJX\",\"pointer\":\"FriendListItem_pointer__15nDM\",\"online\":\"FriendListItem_online__2UuIv FriendListItem_pointer__15nDM\",\"offline\":\"FriendListItem_offline__3hfzw FriendListItem_pointer__15nDM\",\"itemImage\":\"FriendListItem_itemImage__2C-vG\",\"name\":\"FriendListItem_name__2ha-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1056T\",\"section\":\"Container_section__L6ETk\",\"title\":\"Container_title__2subf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__81K2d\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <section className={s.section}>\r\n        <div className={s.container}>\r\n            <h2 className={s.title}>\r\n                {title}\r\n            </h2>\r\n            {children}\r\n        </div>\r\n    </section>\r\n);\r\n\r\nContainer.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats: { followers, views, likes } }) => (\r\n    <>\r\n        <div className={s.card}>\r\n            <div>\r\n                <img className={s.imgProfile}\r\n                    src={avatar}\r\n                    alt={name}\r\n                />\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.tag}>@{tag}</p>\r\n                <p className={s.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={s.list}>\r\n                <li className={s.item}>\r\n                    <span className={s.stat}>Followers</span>\r\n                    <span className={s.statValue}>{followers}</span>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <span className={s.stat}>Views</span>\r\n                    <span className={s.statValue}>{views}</span>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <span className={s.stat}>Likes</span>\r\n                    <span className={s.statValue}>{likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </>\r\n);\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n\r\n    }).isRequired,\r\n};\r\n\r\nexport default Profile;","const randomColor = () => '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase();\r\n\r\nexport default randomColor;","import PropTypes from 'prop-types';\r\nimport randomColor from \"../../utils/randomColor\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n    <div className={s.container}>\r\n        {title && <h3 className={s.title}>{title}</h3>}\r\n\r\n        <ul className={s.list}>\r\n            {stats.map(({id,label,percentage}) => {\r\n                return (<li className={s.item} style={{backgroundColor: randomColor()}} key={id}>\r\n                    <span className={s.label}>{label}</span>\r\n                    <span className={s.value}>{percentage}%</span>\r\n                </li>)\r\n            })}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({friend: { isOnline, avatar, name, key } }) => (\r\n    <li className={s.item} key={key}>\r\n        <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\r\n        <img className={s.itemImage} src={avatar} alt={name} width=\"48\" />\r\n        <p className={s.name}>{name}</p>\r\n    </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n    friend: PropTypes.shape({\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import PropTypes from 'prop-types';\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport s from \"./FriendList.module.css\";\r\nimport React from 'react'\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={s.list}>\r\n        {friends.map(friend =>\r\n            <React.Fragment  key = {friend.id}>\r\n                <FriendListItem friend={friend}/>\r\n            </React.Fragment>\r\n        )}\r\n    </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport s from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n    <table className={s.table}>\r\n        <thead className={s.thead}>\r\n            <tr>\r\n                <th className={s.heading}>Type</th>\r\n                <th className={s.heading}>Amount</th>\r\n                <th className={s.heading}>Currency</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            {items.map(({ id, type, amount, currency }) => (\r\n                <tr className={s.tableRow} key={id}>\r\n                    <td className={s.tableData}>{type}</td>\r\n                    <td className={s.tableData}>{amount}</td>\r\n                    <td className={s.tableData}>{currency}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;","import Container from \"../Container/Container\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport user from \"../Profile/user.json\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport statisticalData from \"../Statistics/statistical-data.json\";\r\nimport FriendList from \"../FriendList/FriendList\";\r\nimport friends from \"../FriendList/friends.json\";\r\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\r\nimport transactions from '../TransactionHistory/transactions.json';\r\n\r\n\r\nconst App = () => (\r\n  <>\r\n    <Container title=\"Task 1 - Social Network Profile\">\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n    </Container>\r\n    <Container title=\"Task 2 - Statistics Section\">\r\n      <Statistics\r\n        title=\"Upload stats\"\r\n        stats={statisticalData}\r\n      />\r\n      <Statistics\r\n        stats={statisticalData}\r\n      />\r\n    </Container>\r\n    <Container title=\"Task 3 - Friends List\">\r\n      <FriendList friends={friends}\r\n      />\r\n    </Container>\r\n    <Container title=\"Task 4 - Transaction History\">\r\n      <TransactionHistory\r\n        items={transactions}\r\n      />\r\n    </Container>\r\n  </>\r\n);\r\n\r\nexport default App;","import App from \"./components/App/App\";\r\nimport ReactDom from 'react-dom'\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\n\r\nconst root = document.querySelector('#root');\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n     root);"],"sourceRoot":""}